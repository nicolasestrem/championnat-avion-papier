---
/**
 * Renders a card for a blog post.
 *
 * This component displays a preview of a blog post, including its image,
 * category, title, description, publication date, and reading time.
 * It links to the full blog post page.
 *
 * @component
 * @param {object} props - The properties for the component.
 * @param {import('astro:content').CollectionEntry<'blog'>} props.post - The blog post data from Astro's content collection.
 */
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, publishDate, category, image, imageAlt, readingTime } = post.data;

const formattedDate = new Date(publishDate).toLocaleDateString('fr-FR', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

const categoryColors = {
  'Tutoriels': 'bg-green-100 text-green-800',
  'Techniques': 'bg-blue-100 text-blue-800',
  'Compétition': 'bg-orange-100 text-orange-800',
  'Actualités': 'bg-purple-100 text-purple-800',
};

const categoryColor = categoryColors[category] || 'bg-gray-100 text-gray-800';
---

<article class="bg-white rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 overflow-hidden h-full flex flex-col">
  {image && (
    <div class="aspect-[16/9] overflow-hidden bg-gray-100">
      <img 
        src={image} 
        alt={imageAlt || title}
        class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
        loading="lazy"
      />
    </div>
  )}
  
  <div class="p-6 flex-1 flex flex-col">
    <div class="flex items-center gap-3 mb-3">
      <span class={`px-3 py-1 rounded-full text-xs font-semibold ${categoryColor}`}>
        {category}
      </span>
      {readingTime && (
        <span class="text-gray-500 text-sm">
          {readingTime} min de lecture
        </span>
      )}
    </div>
    
    <h3 class="text-xl font-bold mb-2 text-gray-900 hover:text-blue-600 transition-colors">
      <a href={`/blog/${post.slug}`} class="block">
        {title}
      </a>
    </h3>
    
    <p class="text-gray-600 mb-4 flex-1 line-clamp-3">
      {description}
    </p>
    
    <div class="flex items-center justify-between mt-auto pt-4 border-t border-gray-100">
      <time datetime={publishDate.toISOString()} class="text-sm text-gray-500">
        {formattedDate}
      </time>
      
      <a 
        href={`/blog/${post.slug}`}
        class="text-blue-600 hover:text-blue-800 font-semibold text-sm flex items-center gap-1 group"
      >
        Lire la suite
        <svg 
          class="w-4 h-4 group-hover:translate-x-1 transition-transform"
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M9 5l7 7-7 7"
          />
        </svg>
      </a>
    </div>
  </div>
</article>